@page "/Dakis"

<link rel="stylesheet" href="~/css/base.css" />
<link rel="stylesheet" href="~/css/basic-grid.css" />
    
<h1>Dakis Integration - Beta</h1>
<h2>Overview</h2>
<p>Check out <a href="https://cphfun.com/" target="_blank">Colonial Photo &amp; Hobby</a> who is using the integration today</p>
<p><a href="https://dakis.com" target="_blank">dakis.com</a> provides a Webstore solution that rapidly allows you to get up and running by selecting products from a master database of photography & other products</p>
<p>System Five by <a href="https://www.windwardsoftware.com/" target="_blank">Windward Software</a> is a business management or point of sale POS solution whose data is used to update a Dakis Webstore</p>

<h2>Structure</h2>
<div style="width: 640px; height: 480px; margin: 10px; position: relative;"><iframe allowfullscreen frameborder="0" style="width:640px; height:480px" src="https://lucid.app/documents/embeddedchart/1a51ab9b-b466-4577-b34e-ef3f3e7b1492" id="TPQO3jrMB.sM"></iframe></div>
<a href="/pdfs/Dakis Integration Structure.pdf" target="_blank">Dakis Integration Structure.pdf</a>

<h2>Software</h2>
<li>Dakis dramatically accellerates the work taken to produce production quality product information consumable on the web.</li>
<li>System Five acts as a POS system allowing you to sell product and manage product data like pricing, barcodes, and more</li>
<li>Other POS Systems can be integrated fairly easily as long as we can produce the common fields for use in sychronizing the data</li>

<h2>Description</h2>
<p>
    I have built a "Push Style" synchronization application that allows Dakis Customers to use POS Data from System Five to update their Dakis Store. The key to this System is that it keeps your
    Dakis Webstore up to date by pushing product information from the POS. The POS Ssystem becomes the source of truth for data that will be displayed in the webstore. The POS database acts
    like a single source for data from the users point of view. You only need read only access to the POS data.
</p>

<h2>Technical Stuff</h2>
<li>A retry pattern is used to create reliable export and import processes</li>
<li>The export from Dakis is filtered by column Making the export from Dakis process more resistant to configuration changes</li>
<li>I have several useful reports for "a detailed listting of changed fields", "duplicate records", "log files", and other reports to help a user understand the results</li>
<li>Caching capability for development troubleshooting</li>

<h2>The future</h2>
<li>Run as a windows service: The app is designed to run as a windows service, and future versions will have the capability to run as a windows service</li>
<li>Cloud service to automate adding new items</li>
<li>An application with a nice user interface that allows for reporting, troubleshooting, and more.</li>

<h2>POS Inventory Screens</h2>
<h3>Main Inventory Edit Tab</h3>
<img src="/images/Inventory from POS.jpg" />
<h3>Extra Tab - Turning on ECommerce flag</h3>
<img src="/images/InventoryfromPOSextratab.jpg" />
<h3>Freeform Fields - For custom fields</h3>
<img src="/images/Inventory from POS Freeform Fields.jpg" />

    @code {

    }
